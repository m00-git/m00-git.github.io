When we navigate to the site its a default apache page, nothing interesting.
[apache]

First we'll open with our nmap scan: nmap -sV 10.10.75.134
[nmap output]

As we can see theres two ports open, just SSH and Apache. This room is very simple.

Then we'll do our gobuster scan: gobuster dir -u http://10.10.75.134:80 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 50
[gobuster output]

Then navigating to the /admin we see its a simple login page. 
[login]
If we inspect this page we see a comment, the login username is going to be "admin"
[login-inspect]

Im going to use OWASP ZAP to bruteforce this. But before I do, since I know the password is only going to be 6 characters, im going to edit my wordlist
to only test for passwords that are 6 characters long. 

cat rockyou.txt | grep -x '.\{6,6\}' > 6rock.txt

I open OWASP ZAP, make a login request with dummy values, and then select the request to fuzz
[about2fuzz]
then I highlight the part of the request I want to be changed, which will be the password. Then I add my altered wordlist as the payload
[zapfuzzer]
I let the fuzzer run for some time, I sort the results by Code so when the password actually logs in it'll be ontop.
[zapfuzzd]

After we login, we get our web flag and also the RSA Private key for user john.
[adminloggd]
At first I didnt know how to pass this private key to john, but after copying and googling for
"crack -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC"
I found a blogpost covering how, https://sql--injection.blogspot.com/p/decrypt-ssh-keys.html
First we need to make the key readable by john, we can do this with a script available on github, I downloaded it with
curl https://raw.githubusercontent.com/stricture/hashstack-server-plugin-jtr/master/scrapers/sshng2john.py > sshng2john.py
then ran it simply with
python sshng2john.py rsa.key > crackme
I had to manually clean up the output though, as there was "16" on its own line for some reason. The final output should look like this:
[crackmeoutput]
then we'll pass that to john with
john crackme --wordlist=rockyou.txt
the hash is cracked successfully
[cracked]
then we can use these credentials to login to ssh
ssh -i rsa.key john@10.10.75.134
but upon doing so I got some errors spat out at me
[ssherror]
after another quick google search I found (how) to fix it, I updated the permissions of the key with https://stackoverflow.com/questions/29933918/ssh-key-permissions-0644-for-id-rsa-pub-are-too-open-on-mac
chmod 400 rsa.key
then sshing in to the server went off without a hitch. and from there we can then obtain our user flag
[user]
